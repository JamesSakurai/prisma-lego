# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Block implements Node {
  id: ID!
  size: String!
  color: String!
  price: String!
}

type Review implements Node {
  id: ID!
  username: String!
  product: String!
  comment: String!
}


#
# Other Types
#

type AggregateBlock {
  count: Int!
}

type AggregateReview {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

"""
A connection to a list of items.
"""
type BlockConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [BlockEdge]!
  aggregate: AggregateBlock!
}

input BlockCreateInput {
  size: String!
  color: String!
  price: String!
}

"""
An edge in a connection.
"""
type BlockEdge {
  """
  The item at the end of the edge.
  """
  node: Block!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum BlockOrderByInput {
  id_ASC
  id_DESC
  size_ASC
  size_DESC
  color_ASC
  color_DESC
  price_ASC
  price_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type BlockPreviousValues {
  id: ID!
  size: String!
  color: String!
  price: String!
}

type BlockSubscriptionPayload {
  mutation: MutationType!
  node: Block
  updatedFields: [String!]
  previousValues: BlockPreviousValues
}

input BlockSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [BlockSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [BlockSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: BlockWhereInput
}

input BlockUpdateInput {
  size: String
  color: String
  price: String
}

input BlockWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [BlockWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [BlockWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  size: String
  """
  All values that are not equal to given value.
  """
  size_not: String
  """
  All values that are contained in given list.
  """
  size_in: [String!]
  """
  All values that are not contained in given list.
  """
  size_not_in: [String!]
  """
  All values less than the given value.
  """
  size_lt: String
  """
  All values less than or equal the given value.
  """
  size_lte: String
  """
  All values greater than the given value.
  """
  size_gt: String
  """
  All values greater than or equal the given value.
  """
  size_gte: String
  """
  All values containing the given string.
  """
  size_contains: String
  """
  All values not containing the given string.
  """
  size_not_contains: String
  """
  All values starting with the given string.
  """
  size_starts_with: String
  """
  All values not starting with the given string.
  """
  size_not_starts_with: String
  """
  All values ending with the given string.
  """
  size_ends_with: String
  """
  All values not ending with the given string.
  """
  size_not_ends_with: String
  color: String
  """
  All values that are not equal to given value.
  """
  color_not: String
  """
  All values that are contained in given list.
  """
  color_in: [String!]
  """
  All values that are not contained in given list.
  """
  color_not_in: [String!]
  """
  All values less than the given value.
  """
  color_lt: String
  """
  All values less than or equal the given value.
  """
  color_lte: String
  """
  All values greater than the given value.
  """
  color_gt: String
  """
  All values greater than or equal the given value.
  """
  color_gte: String
  """
  All values containing the given string.
  """
  color_contains: String
  """
  All values not containing the given string.
  """
  color_not_contains: String
  """
  All values starting with the given string.
  """
  color_starts_with: String
  """
  All values not starting with the given string.
  """
  color_not_starts_with: String
  """
  All values ending with the given string.
  """
  color_ends_with: String
  """
  All values not ending with the given string.
  """
  color_not_ends_with: String
  price: String
  """
  All values that are not equal to given value.
  """
  price_not: String
  """
  All values that are contained in given list.
  """
  price_in: [String!]
  """
  All values that are not contained in given list.
  """
  price_not_in: [String!]
  """
  All values less than the given value.
  """
  price_lt: String
  """
  All values less than or equal the given value.
  """
  price_lte: String
  """
  All values greater than the given value.
  """
  price_gt: String
  """
  All values greater than or equal the given value.
  """
  price_gte: String
  """
  All values containing the given string.
  """
  price_contains: String
  """
  All values not containing the given string.
  """
  price_not_contains: String
  """
  All values starting with the given string.
  """
  price_starts_with: String
  """
  All values not starting with the given string.
  """
  price_not_starts_with: String
  """
  All values ending with the given string.
  """
  price_ends_with: String
  """
  All values not ending with the given string.
  """
  price_not_ends_with: String
}

input BlockWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createBlock(data: BlockCreateInput!): Block!
  createReview(data: ReviewCreateInput!): Review!
  updateBlock(data: BlockUpdateInput!, where: BlockWhereUniqueInput!): Block
  updateReview(data: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review
  deleteBlock(where: BlockWhereUniqueInput!): Block
  deleteReview(where: ReviewWhereUniqueInput!): Review
  upsertBlock(where: BlockWhereUniqueInput!, create: BlockCreateInput!, update: BlockUpdateInput!): Block!
  upsertReview(where: ReviewWhereUniqueInput!, create: ReviewCreateInput!, update: ReviewUpdateInput!): Review!
  updateManyBlocks(data: BlockUpdateInput!, where: BlockWhereInput!): BatchPayload!
  updateManyReviews(data: ReviewUpdateInput!, where: ReviewWhereInput!): BatchPayload!
  deleteManyBlocks(where: BlockWhereInput!): BatchPayload!
  deleteManyReviews(where: ReviewWhereInput!): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Query {
  blocks(where: BlockWhereInput, orderBy: BlockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Block]!
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review]!
  block(where: BlockWhereUniqueInput!): Block
  review(where: ReviewWhereUniqueInput!): Review
  blocksConnection(where: BlockWhereInput, orderBy: BlockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BlockConnection!
  reviewsConnection(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReviewConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

"""
A connection to a list of items.
"""
type ReviewConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ReviewEdge]!
  aggregate: AggregateReview!
}

input ReviewCreateInput {
  username: String!
  product: String!
  comment: String!
}

"""
An edge in a connection.
"""
type ReviewEdge {
  """
  The item at the end of the edge.
  """
  node: Review!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ReviewOrderByInput {
  id_ASC
  id_DESC
  username_ASC
  username_DESC
  product_ASC
  product_DESC
  comment_ASC
  comment_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ReviewPreviousValues {
  id: ID!
  username: String!
  product: String!
  comment: String!
}

type ReviewSubscriptionPayload {
  mutation: MutationType!
  node: Review
  updatedFields: [String!]
  previousValues: ReviewPreviousValues
}

input ReviewSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ReviewSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ReviewSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ReviewWhereInput
}

input ReviewUpdateInput {
  username: String
  product: String
  comment: String
}

input ReviewWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ReviewWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ReviewWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  username: String
  """
  All values that are not equal to given value.
  """
  username_not: String
  """
  All values that are contained in given list.
  """
  username_in: [String!]
  """
  All values that are not contained in given list.
  """
  username_not_in: [String!]
  """
  All values less than the given value.
  """
  username_lt: String
  """
  All values less than or equal the given value.
  """
  username_lte: String
  """
  All values greater than the given value.
  """
  username_gt: String
  """
  All values greater than or equal the given value.
  """
  username_gte: String
  """
  All values containing the given string.
  """
  username_contains: String
  """
  All values not containing the given string.
  """
  username_not_contains: String
  """
  All values starting with the given string.
  """
  username_starts_with: String
  """
  All values not starting with the given string.
  """
  username_not_starts_with: String
  """
  All values ending with the given string.
  """
  username_ends_with: String
  """
  All values not ending with the given string.
  """
  username_not_ends_with: String
  product: String
  """
  All values that are not equal to given value.
  """
  product_not: String
  """
  All values that are contained in given list.
  """
  product_in: [String!]
  """
  All values that are not contained in given list.
  """
  product_not_in: [String!]
  """
  All values less than the given value.
  """
  product_lt: String
  """
  All values less than or equal the given value.
  """
  product_lte: String
  """
  All values greater than the given value.
  """
  product_gt: String
  """
  All values greater than or equal the given value.
  """
  product_gte: String
  """
  All values containing the given string.
  """
  product_contains: String
  """
  All values not containing the given string.
  """
  product_not_contains: String
  """
  All values starting with the given string.
  """
  product_starts_with: String
  """
  All values not starting with the given string.
  """
  product_not_starts_with: String
  """
  All values ending with the given string.
  """
  product_ends_with: String
  """
  All values not ending with the given string.
  """
  product_not_ends_with: String
  comment: String
  """
  All values that are not equal to given value.
  """
  comment_not: String
  """
  All values that are contained in given list.
  """
  comment_in: [String!]
  """
  All values that are not contained in given list.
  """
  comment_not_in: [String!]
  """
  All values less than the given value.
  """
  comment_lt: String
  """
  All values less than or equal the given value.
  """
  comment_lte: String
  """
  All values greater than the given value.
  """
  comment_gt: String
  """
  All values greater than or equal the given value.
  """
  comment_gte: String
  """
  All values containing the given string.
  """
  comment_contains: String
  """
  All values not containing the given string.
  """
  comment_not_contains: String
  """
  All values starting with the given string.
  """
  comment_starts_with: String
  """
  All values not starting with the given string.
  """
  comment_not_starts_with: String
  """
  All values ending with the given string.
  """
  comment_ends_with: String
  """
  All values not ending with the given string.
  """
  comment_not_ends_with: String
}

input ReviewWhereUniqueInput {
  id: ID
}

type Subscription {
  block(where: BlockSubscriptionWhereInput): BlockSubscriptionPayload
  review(where: ReviewSubscriptionWhereInput): ReviewSubscriptionPayload
}
